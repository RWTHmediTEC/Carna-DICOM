cmake_minimum_required(VERSION 2.8.7)

set(CMAKE_DEBUG_POSTFIX d)
set(EXECUTABLE_OUTPUT_PATH ${CMAKE_CURRENT_BINARY_DIR}/bin)
set(LIBRARY_OUTPUT_PATH ${CMAKE_CURRENT_BINARY_DIR}/bin)

############################################
# Library name
############################################
project( Carna-DICOM )
############################################

############################################
# Version declaration
# Target file will be named with version suffix
############################################
set( MAJOR_VERSION		0 )
set( MINOR_VERSION		1 )
set( RELEASE_VERSION	0 )

set( FULL_VERSION		${MAJOR_VERSION}.${MINOR_VERSION}.${RELEASE_VERSION} )

set( TARGET_NAME		${PROJECT_NAME}-${FULL_VERSION} )

configure_file( ${CMAKE_CURRENT_SOURCE_DIR}/misc/configure.cmake.in ${CMAKE_CURRENT_BINARY_DIR}/misc/configure.cmake @ONLY )
configure_file( ${CMAKE_CURRENT_SOURCE_DIR}/misc/install.bat.in ${CMAKE_CURRENT_BINARY_DIR}/misc/install.bat @ONLY )
configure_file( ${CMAKE_CURRENT_SOURCE_DIR}/src/doc/Doxyfile.in ${CMAKE_CURRENT_SOURCE_DIR}/src/doc/Doxyfile @ONLY )
############################################

############################################
# Options
# Set default options for this build
############################################
option(BUILD_DOC	"Build and install the API documentation"	OFF)
option(BUILD_TEST	"Build the unit tests"				OFF)
############################################

############################################
# Find dependencies and add them later to the linker (see below)
############################################

# Qt

set( QT_USE_QTMAIN		TRUE )
set( QT_USE_QTOPENGL	TRUE )
find_package( Qt4 REQUIRED )
include( ${QT_USE_FILE} )
add_definitions( ${QT_DEFINITIONS} )

# Carna

include( $ENV{MEDITEC_LIBS}/Carna/2.5.0/configure.cmake )

# Project

include_directories(${CMAKE_PROJECT_DIR}include)
set( PUBLIC_QOBJECT_HEADERS
		include/${PROJECT_NAME}/base/qt/DicomController.h
)
set( PUBLIC_HEADERS
		${PUBLIC_QOBJECT_HEADERS}
		include/${PROJECT_NAME}/base/model/Series.h
		include/${PROJECT_NAME}/base/model/SeriesElement.h
		include/${PROJECT_NAME}/base/model/SeriesLoadingRequest.h
	)
include_directories(${CMAKE_PROJECT_DIR}src/include)
include_directories(${CMAKE_PROJECT_DIR}src/include/Carna/dicom/qt)	# required for /src/include/Carna/base/flowlayout.h
set( PRIVATE_QOBJECT_HEADERS
		src/include/Carna/base/model/DicomManager.h
		src/include/Carna/base/model/SeriesLoadingWorker.h
		src/include/Carna/base/qt/DicomOpeningDialog.h
		src/include/Carna/base/qt/QtDicomSeriesOpeningController.h
		src/include/Carna/base/qt/SeriesPreview.h
		src/include/Carna/base/qt/SeriesView.h
		src/include/Carna/base/qt/ToggleSeriesPreview.h
)
set( PRIVATE_HEADERS
		${PRIVATE_QOBJECT_HEADERS}
		src/include/Carna/base/model/Patient.h
		src/include/Carna/base/model/Study.h
		src/include/Carna/base/qt/FlowLayout.h
	)
set( SRC
		src/base/model/DicomManager.cpp
		src/base/model/Patient.cpp
		src/base/model/Series.cpp
		src/base/model/SeriesElement.cpp
		src/base/model/SeriesLoadingWorker.cpp
		src/base/model/Study.cpp
		src/base/qt/DicomController.cpp
		src/base/qt/DicomOpeningDialog.cpp
		src/base/qt/FlowLayout.cpp
		src/base/qt/QtDicomSeriesOpeningController.cpp
		src/base/qt/SeriesPreview.cpp
		src/base/qt/SeriesView.cpp
		src/base/qt/ToggleSeriesPreview.cpp
	)
set( FORMS
		""
	)
set( RESOURCES
	)
set( DOC_SRC
		src/doc/Doxyfile.in
		src/doc/doc_00style.css
		src/doc/index.dox
	)
	
QT4_WRAP_CPP( PUBLIC_HEADERS_MOC ${PUBLIC_QOBJECT_HEADERS} )
QT4_WRAP_CPP( PRIVATE_HEADERS_MOC ${PRIVATE_QOBJECT_HEADERS} )
QT4_WRAP_UI( FORMS_HEADERS ${FORMS} )
QT4_ADD_RESOURCES( RESOURCES_RCC ${RESOURCES} )
	
############################################
# Exclude all source files from build,
# since we are using unity build.
############################################
set_source_files_properties(	${SRC}
								${PUBLIC_HEADERS_MOC}
								${PRIVATE_HEADERS_MOC}
								${FORMS_HEADERS}
								${RESOURCES_RCC}
								${DOC_SRC}
	PROPERTIES
	HEADER_FILE_ONLY TRUE )
############################################
	
############################################
# Write unity build file
############################################
set( UNITY_BUILD_FILE	${CMAKE_CURRENT_BINARY_DIR}/${TARGET_NAME}-unitybuild.cpp )

file( REMOVE	${UNITY_BUILD_FILE} )
file( WRITE		${UNITY_BUILD_FILE} "// This file is automatically generated by CMake.\n\n" )
file( APPEND	${UNITY_BUILD_FILE}	"#include <Carna/base/view/glew.h>\n" )

foreach( SOURCE_FILE ${SRC} )
	file( APPEND	${UNITY_BUILD_FILE}	"#include \"${CMAKE_CURRENT_SOURCE_DIR}/${SOURCE_FILE}\"\n" )
endforeach( SOURCE_FILE )

foreach( QT_GENERATED_SOURCE_FILE ${PUBLIC_HEADERS_MOC} ${PRIVATE_HEADERS_MOC} ${FORMS_HEADERS} ${RESOURCES_RCC} )
	file( APPEND	${UNITY_BUILD_FILE}	"#include \"${QT_GENERATED_SOURCE_FILE}\"\n" )
endforeach( QT_GENERATED_SOURCE_FILE )
############################################
	
include_directories( ${CMAKE_CURRENT_BINARY_DIR} )

add_library( ${TARGET_NAME} SHARED
			${SRC}
			${UNITY_BUILD_FILE}
			${PUBLIC_HEADERS}
			${PRIVATE_HEADERS}
			${PUBLIC_HEADERS_MOC}
			${PRIVATE_HEADERS_MOC}
			${FORMS_HEADERS}
			${RESOURCES_RCC}
			${DOC_SRC}
		)

string( TOUPPER ${PROJECT_NAME} PROJECT_NAME_UPPER )
add_definitions( -D${PROJECT_NAME_UPPER}_LIB -DNOMINMAX -D_NO_FRAMEBUFFER_DEBUG )


############################################
# Add dependencies to the linker
############################################

target_link_libraries( ${TARGET_NAME}
			${QT_LIBRARIES}
		)






#vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv
##vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv
### NO CHANGES EVER NECESSARY BELOW THIS POINT!!
##vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv
#vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv

string( REGEX REPLACE "\\\\" "/" INSTALL_DIR $ENV{MEDITEC_LIBS}/${PROJECT_NAME}/${FULL_VERSION} )

install(	TARGETS	${TARGET_NAME}
		RUNTIME	DESTINATION	$ENV{MEDITEC_LIBS}/bin
		)
install(	TARGETS	${TARGET_NAME}
		RUNTIME	DESTINATION	${INSTALL_DIR}/bin
		ARCHIVE	DESTINATION	${INSTALL_DIR}/bin
		LIBRARY	DESTINATION	${INSTALL_DIR}/bin
		)
install(	FILES	${CMAKE_CURRENT_BINARY_DIR}/misc/configure.cmake ${CMAKE_CURRENT_BINARY_DIR}/misc/install.bat
		DESTINATION 	${INSTALL_DIR}
		)
install(	DIRECTORY	${CMAKE_PROJECT_DIR}include
		DESTINATION 	${INSTALL_DIR}
		)
if (WIN32)
	install(	FILES	${CMAKE_CURRENT_BINARY_DIR}/bin/${TARGET_NAME}${CMAKE_DEBUG_POSTFIX}.pdb
			DESTINATION		$ENV{MEDITEC_LIBS}/bin
			OPTIONAL
			)
	install(	FILES	${CMAKE_CURRENT_BINARY_DIR}/bin/${TARGET_NAME}${CMAKE_DEBUG_POSTFIX}.pdb
			DESTINATION		${INSTALL_DIR}/bin
			OPTIONAL
			)
endif()


############################################
# Unit tests
############################################
if( BUILD_TEST )
#	add_subdirectory( test )
endif()
############################################

############################################
# Doxygen API documentation
############################################
if( BUILD_DOC )
	find_package( Doxygen REQUIRED )
	if( DOXYGEN_FOUND )
		add_custom_target(	doc ALL
						${DOXYGEN_EXECUTABLE} 
						WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/src/doc
						COMMENT "Generating API documentation with Doxygen" VERBATIM
					)
		install(	DIRECTORY 	${CMAKE_CURRENT_SOURCE_DIR}/doc
				DESTINATION		${INSTALL_DIR}
			)
	endif( DOXYGEN_FOUND )
endif()
############################################
